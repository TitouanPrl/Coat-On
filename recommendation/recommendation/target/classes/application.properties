spring.application.name=coaton-recommendation

# Server port taken from gateway's application.properties
server.port=8085
# Eureka Settings
eureka.client.serviceUrl.defaultZone  = http://localhost:8761/eureka
eureka.instance.preferIpAddress = true
# Database Settings
#spring.datasource.url=jdbc:postgresql://localhost:5432/recommendation_db

#spring.datasource.username= postgres
#spring.datasource.password= postgres

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.default_schema=public
# Hibernate ddl auto (create, create-drop, validate, update)
# Allows for auto creation of tables
spring.jpa.hibernate.ddl-auto = update

# when using @Slf4j, you need to add the following to show the logs in the terminal
logging.level.com=INFO

# Kafka
spring.kafka.producer.bootstrap-servers= localhost:9092
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.group-id= orderEventGroup
#spring.kafka.consumer.auto-offset-reset= earliest