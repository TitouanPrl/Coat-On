spring.application.name=user-service

server.port=8086
# Database Settings
spring.datasource.url=jdbc:postgresql://localhost:5432/user_db

# TODO: Set these back to default of postgres|postgres
spring.datasource.username= postgres
spring.datasource.password= postgres

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.default_schema=public
# Hibernate ddl auto (create, create-drop, validate, update)
# Allows for auto creation of tables
spring.jpa.hibernate.ddl-auto = update

# when using @Slf4j, you need to add the following to show the logs in the terminal
logging.level.com=INFO
logging.level.io.netty=DEBUG

eureka.client.serviceUrl.defaultZone  = http://localhost:8761/eureka
eureka.instance.preferIpAddress = true
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#spring.config.import=optional:configserver
spring.cloud.config.enabled=false

# Kafka
spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=user:io.coaton.user.dto.UserDto

#Defined default user credentials 
spring.security.user.name = username 
spring.security.user.password= password 
